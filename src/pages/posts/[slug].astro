---
import Layout from "../../layouts/Layout.astro";
import Author from "../../components/Author.astro";

const API_URL = import.meta.env.API_URL;
export async function getStaticPaths() {
    const API_URL = import.meta.env.API_URL;
    const posts = await fetch (`${API_URL}/api/v2/posts`).then(response => response.json());
    return posts.items?.map((post) => {
            return {
                params: {slug: `${post.meta.slug}`},
                props: {postID: `${post.id}`}
            };            
        }
    )        
}
const {postID} = Astro.props;

const post  = await fetch (`${API_URL}/api/v2/posts/${postID}`).then(res => res.json());
---
<Layout pageTitle={post.title}>
    <div class="mb-20">
        <h2 class="text-3xl mb-3 text-[#D81159]">
            {post.title}
        </h2>
        <div class="flex">
            <p class="text-gray-500 mt-1 mb-5 me-3">
                <i class='bx bxs-calendar me-1'></i>
                Published: 
                {post.date}
            </p>
            {
                post.date != post.latest_revision_created_at ?
                    <p class="text-gray-500 mt-1 mb-2">
                        | Updated: 
                        {post.latest_revision_created_at}
                    </p>
                : <div></div>
            }
        </div>
        <div class="text-gray-400">
            <Fragment set:html={post.intro} />
        </div>
    </div>

    <div class="mb-8">
        {
            post.body.map((item) => (
                item.type == "heading" ? <h2 class="text-3xl font-bold mt-16 mb-5 underline underline-offset-4">{item.value}</h2>
               :item.type == "subtitle" ? <h2 class="text-2xl mb-3 mt-10 font-bold">{item.value}</h2>
               : item.type == "paragraph" ? <div class="text-lg mt-5 mb-5" set:html={item.value}></div>
               : item.type == "image" ? <img class="w-2/3 mx-auto mt-3 mb-3" src={item.value.large.src} alt="">
               : item.type == "quote" ? <blockquote class="bg-slate-800 p-2 block italic text-xl mt-5 mb-5" set:html={item.value}></blockquote>
               : <div>{item.value}</div>
            ))

        }
    </div>

    <div class="mt-5">
        <span>Tags: </span>
        {
            post.tags.map((tag) => (
                <a href={`/tags/${tag}`} class=" me-5 mb-3 md:mb-5 font-bold text-[#D81159] hover:border-b-4 hover:border-[#FF80CC] hover:border-dashed">
                    {`#${tag}`}
                </a>
            ))
        }    
    </div>

    <Author />
</Layout>